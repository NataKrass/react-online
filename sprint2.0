//Find the maximum interval between two consecutive numbers. Numbers are entered as arguments
const maxInterv = (...arr) => {
    if(arr.length === 1){
        return 0
    }
  	let max = -1
    let n
    for (let i = 0; i < arr.length - 1; i++) {
	n = Math.abs(arr[i] - arr[i + 1])
	max = Math.max(max, n)
      }
     return max
     
     //or
     return arr.reduce((interval, el, i) =>{
     if( i === arr.length - 1) return interval
     const interv = Math.abs(arr[i + 1] - el)
     return interv > interval ? interv : interval
     }, 0)
}

//The user enters as arguments the number of seconds, minutes, hours, days, weeks, months, years. 
//Output how many seconds are in all this.

const howMuchSec = (...sec) => {
    let sum = 0
    if(sec.length === 2) {
    sum = sum + sec[0] + sec[1] * 60
    }
    if (sec.length === 3 ) {
    sum = sum + sec[0] + (sec[1] * 60) + (sec[2] * 60) * 60
    }
    if (sec.length === 4) {
        sum = sum + sec[0] + (sec[1] * 60)+ (sec[2] * 60) * 60 + ((sec[2] * 60) * 60) * 24
    }
    return sum
    
    //or
    
    const times = [1, 60, 3600, 3600 * 24, 3600 * 24 * 7, 3600 * 24 * 30 ]
    const result = sec.reduce((acc, el, i) => acc + el * times[i], 0)
    rturn result
}

//The function takes any number of strings and returns the sum of their lengths.

const sumOfLen = (...str) => {
    let sum = 0
    for (let i = 0; i < str.length; i++){
    sum = sum + str[i].length
    }
    
    //or
    sum = str.reduce((acc, el) => acc + el.length, 0)
    
    return sum
}

//The function filterByN receives an array of integers, a number and a parameter (greater, less). 
//Print a new array, where all elements will be greater/less than this number

const filterNums = (arr, num, para) => {
    let newArr = []
    if(!num) {
     newArr = arr.filter(el => el > 0)
    }
    else if(para === 'greater' || !para){
     newArr = arr.filter(el => el > num)
    }
     else {
     newArr = arr.filter(el => el < num)
    }
    return newArr;
};
